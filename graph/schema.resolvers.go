package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"pet-s.a-graphql/graph/model"
)

// CreateClient is the resolver for the createClient field.
func (r *mutationResolver) CreateClient(ctx context.Context, input *model.NewClient) (*model.Client, error) {
	return serv.InsertClient(*input)
}

// UpdateClient is the resolver for the updateClient field.
func (r *mutationResolver) UpdateClient(ctx context.Context, input *model.NewClient) (*model.Client, error) {
	return serv.UpdateClient(*input)
}

// DeleteClient is the resolver for the deleteClient field.
func (r *mutationResolver) DeleteClient(ctx context.Context, cedula string) (string, error) {
	return serv.DeleteClient(cedula)
}

// CreatePet is the resolver for the createPet field.
func (r *mutationResolver) CreatePet(ctx context.Context, input *model.NewPet) (*model.Pet, error) {
	return serv.InsertPet(*input)
}

// UpdatePet is the resolver for the updatePet field.
func (r *mutationResolver) UpdatePet(ctx context.Context, input *model.UpdatePet) (*model.Pet, error) {
	return serv.UpdatePet(*input)
}

// DeletePet is the resolver for the deletePet field.
func (r *mutationResolver) DeletePet(ctx context.Context, id int) (int, error) {
	return serv.DeletePet(id)
}

// CreateMedicine is the resolver for the createMedicine field.
func (r *mutationResolver) CreateMedicine(ctx context.Context, input *model.NewMedicine) (*model.Medicine, error) {
	return serv.InsertMedicine(*input)
}

// UpdateMedicine is the resolver for the updateMedicine field.
func (r *mutationResolver) UpdateMedicine(ctx context.Context, input *model.UpdateMedicine) (*model.Medicine, error) {
	return serv.UpdateMedicine(*input)
}

// DeleteMedicine is the resolver for the deleteMedicine field.
func (r *mutationResolver) DeleteMedicine(ctx context.Context, id int) (int, error) {
	return serv.DeleteMedicine(id)
}

// CreateRecipe is the resolver for the createRecipe field.
func (r *mutationResolver) CreateRecipe(ctx context.Context, input *model.NewRecipe) (*model.Recipe, error) {
	return serv.InsertRecipe(*input)
}

// DeleteRecipe is the resolver for the deleteRecipe field.
func (r *mutationResolver) DeleteRecipe(ctx context.Context, id int) (int, error) {
	return serv.DeleteRecipe(id)
}

// GeneralClientReport is the resolver for the generalClientReport field.
func (r *mutationResolver) GeneralClientReport(ctx context.Context, cedula string) (*model.Recipe, error) {
	panic(fmt.Errorf("not implemented: GeneralClientReport - generalClientReport"))
}

// RecipesPetReport is the resolver for the recipesPetReport field.
func (r *mutationResolver) RecipesPetReport(ctx context.Context, idMascota int) (*model.Recipe, error) {
	panic(fmt.Errorf("not implemented: RecipesPetReport - recipesPetReport"))
}

// Clients is the resolver for the clients field.
func (r *queryResolver) Clients(ctx context.Context) ([]*model.Client, error) {
	return serv.GetClients(), nil
}

// Pets is the resolver for the pets field.
func (r *queryResolver) Pets(ctx context.Context) ([]*model.Pet, error) {
	return serv.GetPets()
}

// Medicines is the resolver for the medicines field.
func (r *queryResolver) Medicines(ctx context.Context) ([]*model.Medicine, error) {
	return serv.GetMedicines()
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *mutationResolver) UpdateRecipe(ctx context.Context, input *model.NewRecipe) (*model.Recipe, error) {
	panic(fmt.Errorf("not implemented: UpdateRecipe - updateRecipe"))
}
